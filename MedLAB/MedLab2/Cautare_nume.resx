<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="reflectionImage2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>